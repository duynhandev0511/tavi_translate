import streamlit as st
import tensorflow as tf
from transformers import AutoTokenizer, TFAutoModelForSeq2SeqLM

MODEL_NAME = "FiveC/tay-to-viet-v2"

def load_model():
try:
tokenizer = AutoTokenizer.from_pretrained(MODEL_NAME)
model = TFAutoModelForSeq2SeqLM.from_pretrained(MODEL_NAME)
return tokenizer, model
except Exception as e:
# N·∫øu c√≥ l·ªói, tr·∫£ v·ªÅ None ƒë·ªÉ x·ª≠ l√Ω ·ªü giao di·ªán
st.error(f"L·ªói khi t·∫£i model: {e}. Vui l√≤ng ki·ªÉm tra l·∫°i t√™n model trong file app.py.")
return None, None
T·∫£i model v√† tokenizer
tokenizer, model = load_model()
--- X√¢y d·ª±ng giao di·ªán ng∆∞·ªùi d√πng (UI) ---
st.set_page_config(page_title="D·ªãch m√°y T√†y - Vi·ªát", page_icon="ü§ñ")
st.title("ü§ñüìù Demo D·ªãch m√°y T√†y - Vi·ªát")
st.write("S·∫£n ph·∫©m ƒë∆∞·ª£c x√¢y d·ª±ng b·∫±ng Streamlit v√† tri·ªÉn khai tr√™n Streamlit Community Cloud. Model ƒë∆∞·ª£c t·∫£i t·ª´ Hugging Face.")
H·ªôp vƒÉn b·∫£n ƒë·ªÉ ng∆∞·ªùi d√πng nh·∫≠p li·ªáu
input_text = st.text_area("Nh·∫≠p c√¢u ti·∫øng T√†y v√†o ƒë√¢y:", height=150, placeholder="V√≠ d·ª•: P√¢y kin kh·∫©u.")
N√∫t ƒë·ªÉ th·ª±c hi·ªán d·ªãch
if st.button("D·ªãch sang Ti·∫øng Vi·ªát"):
# Ki·ªÉm tra xem model ƒë√£ ƒë∆∞·ª£c t·∫£i th√†nh c√¥ng v√† c√≥ input ch∆∞a
if model is not None and tokenizer is not None and input_text:
# Hi·ªÉn th·ªã th√¥ng b√°o ƒëang x·ª≠ l√Ω
with st.spinner("ƒêang d·ªãch, vui l√≤ng ch·ªù..."):
# 1. Tokenize c√¢u ƒë·∫ßu v√†o
inputs = tokenizer(input_text, return_tensors="tf", max_length=512, truncation=True)
# 2. D√πng model ƒë·ªÉ sinh ra c√¢u d·ªãch
        output_sequences = model.generate(
            input_ids=inputs['input_ids'],
            attention_mask=inputs['attention_mask'],
            max_length=128,
            num_beams=5,
            early_stopping=True
        )
        
        # 3. Decode k·∫øt qu·∫£
        translated_text = tokenizer.decode(output_sequences[0], skip_special_tokens=True)
        
        # 4. Hi·ªÉn th·ªã k·∫øt qu·∫£
        st.subheader("K·∫øt qu·∫£ d·ªãch (Ti·∫øng Vi·ªát):")
        st.success(translated_text)
        
elif not input_text:
    st.warning("Vui l√≤ng nh·∫≠p c√¢u c·∫ßn d·ªãch.")
else:
    # Tr∆∞·ªùng h·ª£p model kh√¥ng t·∫£i ƒë∆∞·ª£c
    st.error("Model ch∆∞a s·∫µn s√†ng. Vui l√≤ng ki·ªÉm tra l·ªói ·ªü tr√™n.")
